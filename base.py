# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dthOK9QYfArDAoFvy3tojT8ur0qochmu
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC #support vector machines(classifier)
from sklearn import datasets
import matplotlib.pyplot as plt
from sklearn.metrics import accuracy_score, classification_report

iris = datasets.load_iris()

df = pd.DataFrame(iris.data, columns=iris.feature_names) #dataset is stored within the data attribute of the load_iris
print(df.head()) #print first few rows of dataset

plt.scatter(df['petal length (cm)'], df['petal width (cm)'],c=iris.target, cmap='viridis')
plt.xlabel('Petal Length (cm)')
plt.ylabel('Petal Width (cm)')
plt.title('Iris Dataset: Petal Length vs Petal Width')
plt.colorbar(label='Species')
plt.show()

x = iris.data
y = iris.target

X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

model = SVC()
model.fit(X_train, y_train)

accuracy = model.score(X_test, y_test) #accuracy = accuracy_score(X_test, y_test)

print('Test accuracy:', accuracy)

y_pred = model.predict(X_test)

print("Classification Report:")
print(classification_report(y_test, y_pred, target_names=iris.target_names))
# The classification report shows that the model performed well across all three classes, with high precision, recall, and F1-scores.